name: tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php: [7.1, 7.2, 7.3, 7.4, '8.0', 8.1, 8.2]
        laravel: [5.8.*, ^6.0, ^7.0, ^8.0, ^9.0, ^10.0]
        exclude:
          - php: 7.1
            laravel: ^6.0
          - php: 7.1
            laravel: ^7.0
          - php: 7.1
            laravel: ^8.0
          - php: 7.1
            laravel: ^9.0
          - php: 7.1
            laravel: ^10.0
          - php: 7.2
            laravel: ^8.0
          - php: 7.2
            laravel: ^9.0
          - php: 7.2
            laravel: ^10.0
          - php: 7.3
            laravel: ^9.0
          - php: 7.3
            laravel: ^10.0
          - php: 7.4
            laravel: ^9.0
          - php: 7.4
            laravel: ^10.0
          - php: 8.0
            laravel: 5.8.*
          - php: 8.0
            laravel: ^10.0
          - php: 8.1
            laravel: 5.8.*
          - php: 8.1
            laravel: ^6.0
          - php: 8.1
            laravel: ^7.0
          - php: 8.2
            laravel: 5.8.*
          - php: 8.2
            laravel: ^6.0
          - php: 8.2
            laravel: ^7.0
          - php: 8.2
            laravel: ^8.0

    name: PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip
          ini-values: error_reporting=E_ALL
          tools: composer:v2
          coverage: none

      - name: Install dependencies
        run: |
           composer require "illuminate/contracts=${{ matrix.laravel }}" --no-update
           composer update --prefer-dist --no-interaction --no-progress

      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
        mkdir -p database
        touch database/database.sqlite
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit

      - name: Check the duplicate code in app directory
        run: ./vendor/bin/phpcpd app/ --min-lines=5 --min-tokens=10

      - name: Perform phpmd script
        run: ./vendor/bin/phpmd app/ github phpmdrules.xml